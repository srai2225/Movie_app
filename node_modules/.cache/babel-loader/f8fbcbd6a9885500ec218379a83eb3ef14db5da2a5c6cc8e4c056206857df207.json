{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumit rai\\\\Desktop\\\\react_yo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n// 11343fb8\nimport './App.css';\nimport SearchIcon from \"./search.svg\";\nimport MovieCard from \"./moviecard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://www.omdbapi.com?apikey=11343fb8\";\nconst movie1 = {\n  \"Title\": \"Spiderman the Verse\",\n  \"Year\": \"2019–\",\n  \"imdbID\": \"tt12122034\",\n  \"Type\": \"series\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNjA2NmZhOGEtZTQ5OS00MDI0LTg4N2UtYTRmOTllM2I2NDlhXkEyXkFqcGdeQXVyNTU4OTE5Nzc@._V1_SX300.jpg\"\n};\nconst App = () => {\n  _s();\n  const [movies, setmovies] = useState([]);\n  const [searchTerm, setsearchTerm] = useState('');\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&s=${title}`);\n    const data = await response.json();\n    setmovies(data.Search);\n  };\n  useEffect(() => {\n    searchMovies('spiderman');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"search for movies\",\n        value: searchTerm,\n        onChange: e => setsearchTerm(e.target.value) //e is event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => searchMovies(search)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"no movie found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"qslcZm+Oge/KuA5ErreEw3hFNP0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SearchIcon","MovieCard","jsxDEV","_jsxDEV","API_URL","movie1","App","_s","movies","setmovies","searchTerm","setsearchTerm","searchMovies","title","response","fetch","data","json","Search","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","src","alt","onClick","search","length","map","movie","_c","$RefreshReg$"],"sources":["C:/Users/sumit rai/Desktop/react_yo/src/App.js"],"sourcesContent":["import {useEffect,useState} from 'react';\r\n// 11343fb8\r\nimport './App.css';\r\nimport SearchIcon from \"./search.svg\";\r\nimport MovieCard from \"./moviecard\";\r\nconst API_URL=\"http://www.omdbapi.com?apikey=11343fb8\";\r\n\r\nconst movie1={\r\n    \"Title\": \"Spiderman the Verse\",\r\n    \"Year\": \"2019–\",\r\n    \"imdbID\": \"tt12122034\",\r\n    \"Type\": \"series\",\r\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNjA2NmZhOGEtZTQ5OS00MDI0LTg4N2UtYTRmOTllM2I2NDlhXkEyXkFqcGdeQXVyNTU4OTE5Nzc@._V1_SX300.jpg\"\r\n}\r\nconst App= ()=>{\r\n    const [movies,setmovies]=useState([]);\r\n    const [searchTerm,setsearchTerm]=useState('');\r\n\r\n    const searchMovies = async (title) => {\r\n        const response = await fetch(`${API_URL}&s=${title}`);\r\n        const data = await response.json();\r\n    \r\n        setmovies(data.Search);\r\n      };\r\n\r\n    useEffect(()=>{\r\n        searchMovies('spiderman');\r\n    },[]);\r\n\r\n    return(\r\n        <div className='app'>\r\n            <h1>movies</h1>\r\n            <div className='search'>\r\n                <input placeholder=\"search for movies\"\r\n                value={searchTerm}\r\n                onChange={(e)=>setsearchTerm(e.target.value)}//e is event\r\n                /> \r\n                <img\r\n                src={SearchIcon}\r\n                alt=\"search\"\r\n                onClick={()=>searchMovies(search)}\r\n                 />       \r\n            </div>\r\n\r\n            {\r\n                movies?.length>0\r\n                ?(\r\n                    <div className='container'>\r\n                    {movies.map((movie)=>(\r\n                        <MovieCard movie={movie}/>\r\n                    ))}\r\n            </div>\r\n                ) :(\r\n                    <div className='empty'>\r\n                        <h2>no movie found</h2>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}